@using PagesLibrary.Data.Comment;
@inject ILogger<CommentComponent> _logger
@inject NavigationManager _navigation
@inject PopupListService _popUp
@inject IReaction _reaction
@inject ICommentApi _commentApi
@inject ModalPopUpService _modal

<div class="">
    <div class="m-auto d-sm-flex justify-content-center">
        @if (popTyp)
        {
            <button class="btn oi oi-arrow-thick-top btn-outline-primary text-white" @onclick="@(async()=> await GetComment(Id,2))">Popularne</button>
        }
        else
        {
            <button class="btn oi oi-arrow-thick-bottom btn-outline-primary text-white" @onclick="@(async()=> await GetComment(Id,3))">Popularne</button>
        }
        &nbsp;
        @if (dateTyp)
        {
            <button class="btn oi oi-arrow-thick-top btn-outline-primary text-white" @onclick="@(async()=> await GetComment(Id,0))">Najnowsze</button>
        }
        else
        {
            <button class="btn oi oi-arrow-thick-bottom btn-outline-primary text-white" @onclick="@(async()=> await GetComment(Id,1))">Najnowsze</button>
        }
    </div>

    <div>
        <EditForm Model="@NewComment" OnValidSubmit="@OnValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div style="width:100%" class="p-2">
                <InputTextArea style="width:100%" class="bg-black text-white" @bind-Value="NewComment.Description" placeholder="Nowy komentarz" />
            </div>
        </EditForm>

    </div>
    @if (_commentModel != null)
    {
        <div>
            @for (int i = 0; i < _commentModel.Length; i++)
            {
                var index = i;
                <div>
                    <div>
                        <div class="m-auto">
                            <div class="">@_commentModel[i].User.Name &nbsp;</div>
                            <div>@_commentModel[i].Date.ToLocalTime().ToString("dd.MM.yyyy")</div>
                            <div class="border border-1 border-primary form-check-inline">
                                <AuthorizeView>
                                    <Authorized>
                                        @if (_commentModel[index].Reaction.Value >= 0)
                                        {
                                            <button class="btn oi oi-minus btn-outline-primary text-white border border-0" @onclick="@(()=>SetReaction(_commentModel[index].Id,-1))" />
                                        }
                                        @if (_commentModel[index].Reaction.Value != 0)
                                        {
                                            <button class="btn btn-outline-primary text-white border border-0" @onclick="@(()=>SetReaction(_commentModel[index].Id,0))">
                                                @_commentModel[index].Reaction.ValueSum
                                            </button>
                                        }
                                        else
                                        {
                                            <span class="p-2">@_commentModel[index].Reaction.ValueSum</span>
                                        }
                                        @if (_commentModel[index].Reaction.Value <= 0)
                                        {
                                            <button class="oi oi-plus btn btn-outline-primary text-white border border-0" @onclick="@(()=>SetReaction(_commentModel[index].Id,1))" />
                                        }
                                    </Authorized>
                                    <NotAuthorized>
                                        <span class="p-2">@_commentModel[index].Reaction.ValueSum</span>
                                    </NotAuthorized>
                                </AuthorizeView>
                            </div>
                        </div>
                        <div>
                            @_commentModel[i].Description
                        </div>
                    </div>


                </div>
            }
        </div>
    }
    else
    {
        <span>Loading...</span>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    int _orderTyp { get; set; } = 0;
    bool popTyp { get; set; } = false;
    bool dateTyp { get; set; } = false;
    /// <summary>
    ///  0 = data od najnowszej
    ///  1 = data od najstarszej
    ///  2 = reakcje max
    ///  3 = reackcje min
    /// </summary>
    CommentModel[]? _commentModel { get; set; }
    CommentAdd? NewComment { get; set; } = new CommentAdd();
}

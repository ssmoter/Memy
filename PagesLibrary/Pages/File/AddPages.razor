@using Data.File
@using System.Net.Http.Headers;

@inject ILogger<AddPages> _logger
@inject IFileManager _iFileManager
@inject NavigationManager _navigation
@inject AuthenticationStateProvider _authStateProvider
@inject PopupListService _popUp
@inject ModalPopUpService _modal

<div>
    <EditForm EditContext="_editContext">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>
            <div class="form-group p-1">
                <InputText class="bg-black text-white" id="title" @bind-Value="@_fileAdd.Title" placeholder="Tytuł" />
            </div>
            <div class="form-group p-1">
                <InputDropDownList List="@TagTable" @bind-Value="@_fileAdd.SimpleTag" Placeholder="Tag" />
                <div>
                    @for (int i = 0; i < _fileAdd.Tag.Count; i++)
                    {
                        var index = i;
                        <span @onclick="()=>RemoveTagAt(index)">
                            @_fileAdd.Tag[i]&nbsp;
                        </span>
                    }
                </div>
            </div>
            <div class="form-group p-1">
                <InputTextArea class="bg-black text-white" id="description" @bind-Value="@_fileAdd.Description" placeholder="Opis" />
            </div>
            <div class="form-group p-1">
                <DropDownList Description="Wybór kategori" List="@CategoriesTable" @bind-Value="@_fileAdd.Categories" />
                <span>Wybrana kategoria: @_fileAdd.Categories.Item2</span>
            </div>
            <div class="form-group p-1">
                <InputFile OnChange="@Preview" multiple />
            </div>
            @if (_error != null)
            {
                for (int i = 0; i < _error.Count; i++)
                {
                    <div class="alert alert-danger">@_error[i]</div>
                }
            }
            <div class="form-group p-1">
                @if (_fileUploadStatuses != null)
                {
                    @for (int i = 0; i < _fileUploadStatuses.Count; i++)
                    {
                        var index = i;

                        <div class="alert alert-info" @onclick="()=>RemoveAt(index)">
                            <p>@_fileUploadStatuses[i].Name</p>
                            <img src="@_fileUploadStatuses[i].ImgUrl" width="100" height="100" alt="@_fileUploadStatuses[i].Name" />
                        </div>
                    }
                }
            </div>

        </div>
    </EditForm>
    <dvi class="form-group p-1">
        <button class="btn btn-primary" @onclick="@HandleValidSubmit" disabled="@_formInvalid">Dodaj</button>
    </dvi>
</div>

@code {
    FileAdd _fileAdd = new FileAdd();
    EditContext? _editContext;
    private bool? _formInvalid = false;
    List<string>? _error;
    List<FileUploadStatus?>? _fileUploadStatuses;
    CancellationTokenSource cts;
    string[]? TagTable { get; set; }
    (string, string)[] CategoriesTable = new (string, string)[]
    {
        (Memy.Shared.Helper.Categories.Waiting,""),
#if DEBUG
    (Memy.Shared.Helper.Categories.Main,"Main"),
#endif
    };
}

@using PagesLibrary.Data.File;
@using PagesLibrary.Service;

@inject ILogger<MainFilePage> _logger
@inject IFileManager _iFileManager
@inject NavigationManager _navigation
@inject PopupListService _popUp
@inject IReaction _reaction
@inject MainFilePopUpService _mainPopup


@if (TaskModel != null)
{
    <div class="p-1 bg-gradient">
        <Microsoft.AspNetCore.Components.Routing.NavLink class="nav-link" href="@($"/obj/{TaskModel.Id}")">
            <h4>@TaskModel.Id @TaskModel.Title</h4>
        </Microsoft.AspNetCore.Components.Routing.NavLink>
        <div>
            <span>@TaskModel.User.Name</span>
            <span>@_date</span>
        </div>
        <div>
            @if (TaskModel.Tag != null)
            {
                for (int j = 0; j < TaskModel.Tag.Length; j++)
                {
                    <span>@TaskModel.Tag[j].Value &nbsp;</span>
                }
            }
        </div>
        <div>
            @if (TaskModel.Description != null)
            {
                @if (TaskModel.Description.Length > _descriptionLength)
                {
                    <details class="">
                        <summary class="">
                            @(GetFirstSegment(TaskModel.Description).ToString())

                        </summary>
                        @(GetRestSegment(TaskModel.Description).ToString())
                    </details>
                }
                else
                {
                    <p>
                        @TaskModel.Description
                    </p>
                }
            }
        </div>
        <div>
            @if (TaskModel.FileModel != null)
            {
                if (TaskModel.FileModel.Length > 1)
                {
                    <div class="m-auto d-flex justify-content-center">
                        @for (int j = 0; j < TaskModel.FileModel.Length; j++)
                        {
                            var img = j;
                            <button class="btn" @onclick="@(()=>ChangeImg(img))">
                                <img src="@(_iFileManager.GetImgAsync(TaskModel.FileModel[j].Name,TaskModel.FileModel[j].Typ))"
                                     alt="@TaskModel.FileModel[j].Name" width="50" height="50" loading="lazy" />
                            </button>
                        }
                    </div>
                }
                <img src="@(_iFileManager.GetImgAsync(TaskModel.FileModel[_maingImg].Name,TaskModel.FileModel[_maingImg].Typ))"
                     alt="@TaskModel.FileModel[_maingImg].Name" style="width: 100%; object-fit: cover;" loading="lazy" />
            }
        </div>
        <div class="m-auto d-sm-flex justify-content-center p-1">
            @if (Id <= 0)
            {
                <button class="btn btn-outline-primary text-white border border-1 border-primary" @onclick="@(() => _mainPopup.ShowPopUp(TaskModel))">Komentarze</button>
                <span>&nbsp;</span>
            }
            <div class="border border-1 border-primary form-check-inline rounded-3 ">
                <AuthorizeView>
                    <Authorized>
                        @if (TaskModel.Reaction.Value >= 0)
                        {
                            <button class="btn btn-outline-primary text-white border border-0 "
                            @onclick="@(()=>SetReaction(TaskModel.Id,-1))">
                                <h5 class="oi oi-minus p-1 my-0"></h5>
                                <h4 class="d-inline-block my-0">
                                    @TaskModel.Reaction.ValueSumNegative
                                </h4>
                            </button>
                        }
                        else
                        {
                            <button class="btn  btn-outline-primary text-white border border-0 "
                            @onclick="@(()=>SetReaction(TaskModel.Id,0))">
                                <h5 class="oi oi-minus bg-danger p-1 rounded-3 my-0"></h5>
                                <h4 class="d-inline-block my-0">
                                    @TaskModel.Reaction.ValueSumNegative
                                </h4>
                            </button>
                        }
                        @if (TaskModel.Reaction.Value <= 0)
                        {

                            <button class="btn btn-outline-primary text-white border border-0 "
                            @onclick="@(()=>SetReaction(TaskModel.Id,1))">
                                <h5 class="oi oi-plus p-1 my-0"></h5>
                                <h4 class="d-inline-block my-0">
                                    @TaskModel.Reaction.ValueSumPositive
                                </h4>
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-outline-primary text-white border border-0 "
                            @onclick="@(()=>SetReaction(TaskModel.Id,0))">
                                <h5 class="oi oi-plus p-1 bg-success rounded-3 my-0"></h5>
                                <h4 class="d-inline-block my-0">
                                    @TaskModel.Reaction.ValueSumPositive
                                </h4>
                            </button>
                        }
                    </Authorized>
                    <NotAuthorized>
                        <button disabled class="btn btn-outline-primary text-white border border-0 ">
                            <h5 class="oi oi-minus bg-danger p-1 my-0"></h5>
                            <h4 class="d-inline-block my-0">
                                @TaskModel.Reaction.ValueSumNegative
                            </h4>
                        </button>
                        <button disabled class="btn btn-outline-primary text-white border border-0 ">
                            <h5 class="oi oi-plus bg-success p-1 my-0"></h5>
                            <h4 class="d-inline-block my-0">
                                @TaskModel.Reaction.ValueSumPositive
                            </h4>
                        </button>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
        @if (Id > 0)
        {
            <div>
                <CommentComponentList Id="TaskModel.Id" />
            </div>
        }
    </div>
}
else
{
    <span>Loading...</span>
}

@code {
    [Parameter]
    public TaskModel? TaskModel { get; set; }
    [Parameter]
    public int Id { get; set; }
}

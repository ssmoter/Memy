@using Data.File
@using System.Net.Http.Headers;

@inject ILogger<AddPage> _logger
@inject IFileManager _iFileManager
@inject NavigationManager _navigation
@inject AuthenticationStateProvider _authStateProvider
@inject PopupListService _popUp
@inject ModalPopUpService _modal

<div>
    <EditForm EditContext="_editContext">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>
            <div class="form-group p-1">
                <InputText class="bg-black text-white w-100" id="title" @bind-Value="@_fileAdd.Title" placeholder="Tytuł" />
            </div>
            <div class="form-group p-1">
                <InputDropDownList classs="w-100" List="@TagTable" @bind-Value="@_fileAdd.SimpleTag" Placeholder="Tag" />
                <div>
                    @if (_fileAdd.Tag.Count > 0)
                    {
                        <span>Wybrane tagi: </span>
                    }
                    @for (int i = 0; i < _fileAdd.Tag.Count; i++)
                    {
                        var index = i;

                        <span class="btn btn-outline-primary border-0 m-0 p-0" @onclick="()=>RemoveTagAt(index)">
                            &nbsp; @_fileAdd.Tag[i] &nbsp;
                        </span>
                    }
                </div>
            </div>
            <div class="form-group p-1">
                <InputTextArea class="bg-black text-white w-100" id="description" @bind-Value="@_fileAdd.Description" placeholder="Opis" />
            </div>
            <div class="form-group p-1">
                <DropDownList Description="Wybór kategori" List="@CategoriesTable" @bind-Value="@_fileAdd.Categories" />
                <span>Wybrana kategoria: @_fileAdd.Categories.Item2</span>
            </div>
            <div>
                <span class="m-0 d-flex justify-content-center">
                    Dodaj plik typu:
                </span>
                <div class="m-0 d-flex justify-content-center">
                    <button class="btn btn-outline-primary" @onclick="@(()=>_objTyp=(int)Memy.Shared.Helper.MyEnums.FileTyp.text)">tekstowy</button>
                    <button class="btn btn-outline-primary" @onclick="@(()=>_objTyp=(int)Memy.Shared.Helper.MyEnums.FileTyp.image)">obraz lub wideo</button>
                    <button class="btn btn-outline-primary" @onclick="@(()=>_objTyp=(int)Memy.Shared.Helper.MyEnums.FileTyp.YouTube)">yt link</button>
                </div>
            </div>
            @if (_objTyp == (int)Memy.Shared.Helper.MyEnums.FileTyp.text)
            {
                <div class="form-group p-1">
                    <InputTextArea class="bg-black text-white w-100" id="description" @bind-Value="@_moreText" placeholder="Dodatkowy Opis" />
                    <span class="m-0 d-flex justify-content-end">
                        <button class="btn btn-outline-primary" @onclick="@(()=>PreviewText(_moreText,(int)Memy.Shared.Helper.MyEnums.FileTyp.text))">Dodaj</button>
                    </span>
                </div>
            }
            @if (_objTyp == (int)Memy.Shared.Helper.MyEnums.FileTyp.image || _objTyp == (int)Memy.Shared.Helper.MyEnums.FileTyp.video)
            {
                <div class="form-group p-1">
                    <InputFile OnChange="@Preview" multiple />
                </div>
            }
            @if (_objTyp == (int)Memy.Shared.Helper.MyEnums.FileTyp.YouTube)
            {
                <div class="form-group p-1">
                    <InputText class="bg-black text-white w-100" id="description" @bind-Value="@_ytText" placeholder="Adres filmu" />
                    <span class="m-0 d-flex justify-content-end">
                        <button class="btn btn-outline-primary" @onclick="@(()=>PreviewText(_ytText,(int)Memy.Shared.Helper.MyEnums.FileTyp.YouTube))">Dodaj</button>
                    </span>
                </div>
            }

            @if (_error != null)
            {
                for (int i = 0; i < _error.Count; i++)
                {
                    <div class="alert alert-danger">@_error[i]</div>
                }
            }
            <div class="form-group p-1">
                @if (_fileUploadStatuses != null)
                {
                    if (_fileUploadStatuses.Count > 0)
                    {
                        <div class="m-auto d-flex justify-content-center">
                            <span class="float-start">
                                @for (int i = 0; i < _fileUploadStatuses.Count; i++)
                                {
                                    var index = i;
                                    <div class="btn btn-outline-primary p-1" @onclick="()=>RemoveAt(index)">
                                        @if (_fileUploadStatuses[i].ObjTyp == (int)Memy.Shared.Helper.MyEnums.FileTyp.text
                                       || _fileUploadStatuses[i].ObjTyp == (int)Memy.Shared.Helper.MyEnums.FileTyp.YouTube)
                                        {
                                            <span class="m-auto d-flex justify-content-center">
                                                <ObjectTypeComponent IsSmall="true" IsPreview="true" fileModel="@(new FileModel(){ObjName=_fileUploadStatuses[i].ObjName,ObjTyp=_fileUploadStatuses[i].ObjTyp,ObjOrder = _fileUploadStatuses[i].ObjOrder})"></ObjectTypeComponent>
                                            </span>
                                            <p class="oi oi-trash"></p>
                                        }
                                        else
                                        {
                                            <span class="m-auto d-flex justify-content-center">
                                                <ObjectTypeComponent IsSmall="true" IsPreview="true" fileModel="@(new FileModel(){ObjName=_fileUploadStatuses[i].ImgUrl,ObjTyp=_fileUploadStatuses[i].ObjTyp,ObjOrder = _fileUploadStatuses[i].ObjOrder})"></ObjectTypeComponent>
                                            </span>
                                            <p class="oi oi-trash">@_fileUploadStatuses[i].ObjName</p>
                                        }
                                    </div>
                                }
                            </span>
                        </div>
                        <div class="position-relative m-auto justify-content-center d-flex p-1">
                            @if (_fileUploadStatuses.Count > 1)
                            {
                                <span class="arrow-left swip-arrow">
                                    <button class="btn btn-outline-primary border-0 oi oi-arrow-thick-left px-1 arrow-size-2 rounded-circle top-50" @onclick="@(ImgLeft)"></button>
                                </span>
                            }
                            @if (_fileUploadStatuses[_maingImg].ObjTyp == (int)Memy.Shared.Helper.MyEnums.FileTyp.text
                           || _fileUploadStatuses[_maingImg].ObjTyp == (int)Memy.Shared.Helper.MyEnums.FileTyp.YouTube)
                            {
                                <ObjectTypeComponent IsPreview="true" fileModel="@(new FileModel(){ObjName=_fileUploadStatuses[_maingImg].ObjName,ObjTyp=_fileUploadStatuses[_maingImg].ObjTyp,ObjOrder = _fileUploadStatuses[_maingImg].ObjOrder})"></ObjectTypeComponent>
                            }
                            else
                            {
                                <ObjectTypeComponent IsPreview="true" fileModel="@(new FileModel(){ObjName=_fileUploadStatuses[_maingImg].ImgUrl,ObjTyp=_fileUploadStatuses[_maingImg].ObjTyp,ObjOrder = _fileUploadStatuses[_maingImg].ObjOrder})"></ObjectTypeComponent>
                            }
                            @if (_fileUploadStatuses.Count > 1)
                            {
                                <span class="arrow-right swip-arrow">
                                    <button class="btn btn-outline-primary border-0 oi oi-arrow-thick-right px-1  arrow-size-2 rounded-circle top-50" @onclick="@(ImgRight)"></button>
                                </span>
                            }
                        </div>
                    }
                }
            </div>

        </div>
    </EditForm>
    <dvi class="form-group p-1">
        <button class="btn btn-primary m-auto d-flex justify-content-end" @onclick="@HandleValidSubmit" disabled="@_formInvalid">Wyślij</button>
    </dvi>
</div>

@code {
    FileAdd _fileAdd = new FileAdd();
    EditContext? _editContext;
    private bool? _formInvalid = false;
    List<string>? _error;
    List<FileUploadStatus?>? _fileUploadStatuses;
    CancellationTokenSource cts;
    string[]? TagTable { get; set; }
    int _maingImg { get; set; } = 0;
    string _moreText { get; set; }
    string _ytText { get; set; }


    (string, string)[] CategoriesTable = new (string, string)[]
    {
        (Memy.Shared.Helper.Categories.Waiting,"Brak"),
#if DEBUG
    (Memy.Shared.Helper.Categories.Main,"Main"),
#endif
    };

    int _objTyp = 0;
}

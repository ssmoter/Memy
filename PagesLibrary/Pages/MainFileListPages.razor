@using PagesLibrary.Data.File
@using PagesLibrary.Service;

@inject ILogger<MainFileListPages> _logger
@inject IFileManager _iFileManager
@inject NavigationManager _navigation
@inject PopupListService _popUp
@inject IReaction _reaction
@inject MainFilePopUpService _mainPopup

<div style="max-width:500px">
    @if (TaskModels != null)
    {
        @for (int i = 0; i < TaskModels.Length; i++)
        {
            var index = i;
            <MainFilePage TaskModel="@TaskModels[index]"/>
        }
    }
    else
    {
        <p>Loading...</p>
    }
    <br />
    <div class="m-auto d-sm-flex justify-content-sm-center">
        @{
            var EnableBack = false;
            if (Start == null)
            {
                Start = 1;
                EnableBack = false;
            }
            if (Start != null)
            {
                EnableBack = (int)Start == 1 ? true : false;
            }
        }
        <dvi>
            <span class="m-auto d-sm-flex justify-content-sm-center">
                <button class="btn oi oi-arrow-thick-left btn-outline-primary text-white" disabled="@EnableBack" @onclick="@(()=>ChangePage((int)Start-1))">@((int)Start - 1)</button>
                <button class="btn oi oi-arrow-thick-right btn-outline-primary text-white" @onclick="@(()=>ChangePage((int)Start+1))">@((int)Start + 1)</button>
            </span>
            <div>
                @for (int i = (int)Start - 2; i < (int)Start + 5; i++)
                {
                    int index = i;
                    if (Start == index)
                    {
                        continue;
                    }
                    if (i > 0)
                    {
                        <button class="btn btn-outline-primary text-white" @onclick="@(()=>ChangePage(index))">@i</button>
                    }
                }
            </div>
        </dvi>
    </div>
</div>


@code {
    [Parameter]
    public int? Start { get; set; } = 1;
    [Parameter]
    public int? Max { get; set; } = 10;
    [Parameter]
    public string? Categories { get; set; }
    [Parameter]
    public bool? Banned { get; set; } = false;
    [Parameter]
    public string? DateEnd { get; set; }
    [Parameter]
    public string? DateStart { get; set; }
}

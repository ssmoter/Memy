@if (List != null)
{
    <div class="w-100">
        <div class="dropdown-header ">
            <h6>@Description </h6>
            <select class="dropdown form-select bg-black text-white" name="@nameof(List)"
            @onchange="@(EventCallback.Factory.Create(this,e=>Value = (((ChangeEventArgs)e).Value.ToString(),Value.Item2.ToString())))">
                @for (int i = 0; i < List.Count; i++)
                {
                    <option class="dropdown-item text-white" value="@List[i].Item1">@List[i].Item2</option>
                }
            </select>
        </div>
    </div>
}

@code {
    [Parameter]
    public string? Theme { get; set; }
    [Parameter]
    public string? Description { get; set; }
    [Parameter]
    public IList<(string?, string?)> List { get; set; }

    [Parameter]
    public Func<Task> Func { get; set; }

    (string?, string?) _value;
    [Parameter]
    public (string?, string?) Value
    {
        get => _value;
        set
        {
            if (_value != value)
            {
                _value = value;
                _value.Item2 = List.FirstOrDefault(x => x.Item1 == value.Item1).Item2;
                ValueChanged.InvokeAsync(Value);
                if (bInitialized)
                {
                    Func?.Invoke();
                }
                bInitialized = true;
            }
        }
    }

    bool bInitialized = false;

    [Parameter]
    public EventCallback<(string, string)> ValueChanged { get; set; }

}

